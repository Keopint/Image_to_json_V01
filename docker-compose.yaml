services:
  web:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    environment:
      - FLASK_APP=app/__init__.py
      - FLASK_ENV=development
      - TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/tessdata
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network

  redis:
    image: redis:alpine
    hostname: redis  
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app-network

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge